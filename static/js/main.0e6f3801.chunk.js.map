{"version":3,"sources":["Counter.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","className","count","onClick","increment","decrement","reset","App","useState","setCount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAmBeA,MAff,SAAiBC,GAGb,OACI,sBAAKC,UAAU,YAAf,UACE,sBAAMA,UAAU,uBAAhB,SAAwCD,EAAME,QAC9C,sBAAKD,UAAU,SAAf,UACA,sBAAME,QAASH,EAAMI,UAAWH,UAAU,wBAA1C,SAAmE,mBAAGA,UAAU,yBAChF,sBAAME,QAASH,EAAMK,UAAWJ,UAAU,oBAA1C,SAA8D,mBAAGA,UAAU,0BAC3E,sBAAME,QAASH,EAAMM,MAAOL,UAAU,sBAAtC,SAA4D,mBAAGA,UAAU,4BCwBpEM,MAjCf,WACE,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KAmBA,OACE,8BACF,cAAC,EAAD,CACEP,MAAOA,EACPE,UArBgB,WACbK,EAASP,EAAM,IAqBlBG,UAlBgB,WAGVI,EAFDP,EAAM,EAEIA,EAAM,EAGR,IAabI,MAVa,WACXG,EAAS,SCTAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0e6f3801.chunk.js","sourcesContent":["\r\nimport './App.css';\r\n\r\n\r\nfunction Counter(props){\r\n\r\n\r\n    return  (\r\n        <div className=\"container\"> \r\n          <span className=\"btn btn-primary mr-2\">{props.count}</span>\r\n          <div className='button'>\r\n          <span onClick={props.increment} className=\"btn btn-secondary m-2\" ><i className=\"fas fa-plus-circle\"></i></span>\r\n          <span onClick={props.decrement} className=\"btn btn-info mr-2\"><i className=\"fas fa-minus-circle\"></i></span>\r\n          <span onClick={props.reset} className=\"btn btn-success m-2\"><i className=\"fas fa-refresh\"></i></span>\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Counter;","import  { useState } from 'react';\nimport './App.css';\nimport Counter from './Counter';\n\nfunction App() {\n  const [count,setCount] =useState(0);\n\n  const increment = () => {\n       setCount(count+1);\n  }\n\n  const decrement = () => {\n      if(count>1)\n      {\n          setCount(count-1)\n      }\n      else\n        setCount(0)\n       }\n\n    const reset =() =>{\n      setCount(0);\n    }\n \n  return (\n    <div>\n  <Counter \n    count={count}\n    increment={increment}\n    decrement={decrement}\n    reset={reset}\n  />\n   </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}